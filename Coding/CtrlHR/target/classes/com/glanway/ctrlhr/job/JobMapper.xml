<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glanway.ctrlhr.dao.job.JobDao">
	<resultMap id="BaseResultMap" type="com.glanway.ctrlhr.entity.job.Job">
		<id column="ID" property="id" jdbcType="DECIMAL" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="JOB_TYPE_ID" property="jobTypeId" jdbcType="DECIMAL" />
		<result column="JOB_GRADE_ID" property="jobGradeId" jdbcType="DECIMAL" />
		<result column="SALARY_TYPE_ID" property="salaryTypeId" jdbcType="DECIMAL" />
		<result column="STATE" property="state" jdbcType="DECIMAL" />
		<result column="BATCH_DATE" property="batchDate" jdbcType="TIMESTAMP" />
		<result column="DELETED" property="deleted" jdbcType="CHAR" />
		<result column="CRE_PRO_ID" property="creProId" jdbcType="DECIMAL" />
		<result column="CREATED_BY" property="createdBy" jdbcType="DECIMAL" />
		<result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
		<result column="MOD_PRO_ID" property="modProId" jdbcType="DECIMAL" />
		<result column="LAST_MODIFIED_BY" property="lastModifiedBy"
			jdbcType="DECIMAL" />
		<result column="LAST_MODIFIED_DATE" property="lastModifiedDate"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, NAME, JOB_TYPE_ID, JOB_GRADE_ID, SALARY_TYPE_ID, STATE, BATCH_DATE, DELETED,
		CRE_PRO_ID, CREATED_BY,
		CREATED_DATE, MOD_PRO_ID, LAST_MODIFIED_BY, LAST_MODIFIED_DATE
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from T_JOB
		where ID = #{id,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from T_JOB
		where ID = #{id,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.glanway.ctrlhr.entity.job.Job">
		insert into T_JOB (ID, NAME, JOB_TYPE_ID,
		JOB_GRADE_ID,SALARY_TYPE_ID, STATE, BATCH_DATE,
		DELETED, CRE_PRO_ID, CREATED_BY,
		CREATED_DATE, MOD_PRO_ID, LAST_MODIFIED_BY,
		LAST_MODIFIED_DATE)
		values (#{id,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR},
		#{jobTypeId,jdbcType=DECIMAL},
		#{jobGradeId,jdbcType=DECIMAL}, #{salaryTypeId,jdbcType=DECIMAL}, #{state,jdbcType=DECIMAL}, #{batchDate,jdbcType=TIMESTAMP},
		#{deleted,jdbcType=CHAR}, #{creProId,jdbcType=DECIMAL},
		#{createdBy,jdbcType=DECIMAL},
		#{createdDate,jdbcType=TIMESTAMP}, #{modProId,jdbcType=DECIMAL}, #{lastModifiedBy,jdbcType=DECIMAL},
		#{lastModifiedDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"  parameterType="com.glanway.ctrlhr.entity.job.Job">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE">
			SELECT S_T_JOB.NEXTVAL FROM DUAL
		</selectKey>
		insert into T_JOB
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="name != null">
				NAME,
			</if>
			<if test="jobTypeId != null">
				JOB_TYPE_ID,
			</if>
			<if test="jobGradeId != null">
				JOB_GRADE_ID,
			</if>
			<if test="salaryTypeId != null">
				SALARY_TYPE_ID,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="batchDate != null">
				BATCH_DATE,
			</if>
			<if test="deleted != null">
				DELETED,
			</if>
			<if test="creProId != null">
				CRE_PRO_ID,
			</if>
			<if test="createdBy != null">
				CREATED_BY,
			</if>
			<if test="createdDate != null">
				CREATED_DATE,
			</if>
			<if test="modProId != null">
				MOD_PRO_ID,
			</if>
			<if test="lastModifiedBy != null">
				LAST_MODIFIED_BY,
			</if>
			<if test="lastModifiedDate != null">
				LAST_MODIFIED_DATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=DECIMAL},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="jobTypeId != null">
				#{jobTypeId,jdbcType=DECIMAL},
			</if>
			<if test="jobGradeId != null">
				#{jobGradeId,jdbcType=DECIMAL},
			</if>
			<if test="salaryTypeId != null">
				#{salaryTypeId,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				#{state,jdbcType=DECIMAL},
			</if>
			<if test="batchDate != null">
				#{batchDate,jdbcType=TIMESTAMP},
			</if>
			<if test="deleted != null">
				#{deleted,jdbcType=CHAR},
			</if>
			<if test="creProId != null">
				#{creProId,jdbcType=DECIMAL},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=DECIMAL},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modProId != null">
				#{modProId,jdbcType=DECIMAL},
			</if>
			<if test="lastModifiedBy != null">
				#{lastModifiedBy,jdbcType=DECIMAL},
			</if>
			<if test="lastModifiedDate != null">
				#{lastModifiedDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.glanway.ctrlhr.entity.job.Job">
		update T_JOB
		<set>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="jobTypeId != null">
				JOB_TYPE_ID = #{jobTypeId,jdbcType=DECIMAL},
			</if>
			<if test="jobGradeId != null">
				JOB_GRADE_ID = #{jobGradeId,jdbcType=DECIMAL},
			</if>
			<if test="salaryTypeId != null">
				SALARY_TYPE_ID = #{salaryTypeId,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=DECIMAL},
			</if>
			<if test="batchDate != null">
				BATCH_DATE = #{batchDate,jdbcType=TIMESTAMP},
			</if>
			<if test="deleted != null">
				DELETED = #{deleted,jdbcType=CHAR},
			</if>
			<if test="creProId != null">
				CRE_PRO_ID = #{creProId,jdbcType=DECIMAL},
			</if>
			<if test="createdBy != null">
				CREATED_BY = #{createdBy,jdbcType=DECIMAL},
			</if>
			<if test="createdDate != null">
				CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modProId != null">
				MOD_PRO_ID = #{modProId,jdbcType=DECIMAL},
			</if>
			<if test="lastModifiedBy != null">
				LAST_MODIFIED_BY = #{lastModifiedBy,jdbcType=DECIMAL},
			</if>
			<if test="lastModifiedDate != null">
				LAST_MODIFIED_DATE = #{lastModifiedDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.glanway.ctrlhr.entity.job.Job">
		update T_JOB
		set NAME = #{name,jdbcType=VARCHAR},
		JOB_TYPE_ID = #{jobTypeId,jdbcType=DECIMAL},
		JOB_GRADE_ID = #{jobGradeId,jdbcType=DECIMAL},
		SALARY_TYPE_ID = #{salaryTypeId,jdbcType=DECIMAL},
		STATE = #{state,jdbcType=DECIMAL},
		BATCH_DATE = #{batchDate,jdbcType=TIMESTAMP},
		DELETED = #{deleted,jdbcType=CHAR},
		CRE_PRO_ID = #{creProId,jdbcType=DECIMAL},
		CREATED_BY = #{createdBy,jdbcType=DECIMAL},
		CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
		MOD_PRO_ID = #{modProId,jdbcType=DECIMAL},
		LAST_MODIFIED_BY = #{lastModifiedBy,jdbcType=DECIMAL},
		LAST_MODIFIED_DATE = #{lastModifiedDate,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	
	<!-- 全部查询 -->
	<!-- 通过部门ID查找部门对应的职位 -->
	<select id="findJobByDeptId" resultType="Job">
		<!-- 早期是通过编制查询部门和职位的关系,现在业务需求改变了,应舍弃 -->
		<!-- SELECT 
			JOB.ID,JOB.NAME
		FROM T_JOB_ORGANIZE TJO
		LEFT JOIN T_JOB JOB ON JOB.ID = TJO.JOB_ID AND JOB.STATE = 1 AND JOB.DELETED = 0
		WHERE TJO.DELETED = 0 AND TJO.DEPT_ID = #{deptId} -->
		
		<!-- 通过职位类型查询部门和职位关联 -->
		SELECT 
			JOB.ID,JOB.NAME 
		FROM T_DEPT DEPT
		INNER JOIN T_JOB_TYPE_DEPT TJTD ON TJTD.DEPT_ID = DEPT.ID AND TJTD.DELETED = 0
		INNER JOIN T_JOB_TYPE TJT ON TJT.ID = TJTD.JOB_TYPE_ID AND TJT.DELETED = 0
		INNER JOIN T_JOB JOB ON JOB.JOB_TYPE_ID = TJT.ID AND JOB.STATE = 1 AND JOB.DELETED = 0
		WHERE DEPT.DELETED = 0 AND DEPT.STATE = 1 AND DEPT.ID = #{deptId}
	</select>

	<!-- 员工列表查询条件 -->
	<sql id="where_findList">
		<where>
			J.DELETED = 0
			<if test="para.keyword != null and para.keyword != ''">
				AND (J.NAME LIKE '%${para.keyword}%' OR J.NAME LIKE '%${para.keyword}%')
			</if>
			<if test="para.jobTypeIds != null and para.jobTypeIds != ''">
				AND J.JOB_TYPE_ID IN
				<foreach collection="para.jobTypeIdList" item="jobTypeId" open="(" close=")" separator=",">
					#{jobTypeId}
				</foreach>
			</if>
			<if test="para.jobGradeIds != null and para.jobGradeIds != ''">
				AND J.JOB_GRADE_ID IN
				<foreach collection="para.jobGradeIdList" item="jobGradeId" open="(" close=")" separator=",">
					#{jobGradeId}
				</foreach>
			</if>
			<if test="para.salaryTypeIds != null and para.salaryTypeIds != ''">
				AND J.SALARY_TYPE_ID IN
				<foreach collection="para.salaryTypeIdList" item="salaryTypeId" open="(" close=")" separator=",">
					#{salaryTypeId}
				</foreach>
			</if>
		</where>
	</sql>
	<!-- 员工列表查询Orcale分页查询主体数据 -->
	<sql id="list_findList">
		SELECT
		J.ID,J.NAME,JT.NAME JOB_TYPE,JG.NAME JOB_GRADE,ST.NAME SALARY_TYPE,
		SI.SALARY1,SI.SALARY2,SI.SALARY3,SI.SALARY4,SI.SALARY5,SI.SALARY6,SI.SALARY7,SI.SALARY8,SI.SALARY9,SI.SALARY10,
		SI.MERIT_PAY1,SI.MERIT_PAY2,SI.MERIT_PAY3,SI.MERIT_PAY4,SI.MERIT_PAY5,
		J.JOB_TYPE_ID,J.JOB_GRADE_ID,J.SALARY_TYPE_ID
		FROM
		T_JOB J
		LEFT JOIN T_JOB_TYPE JT ON JT.ID = J.JOB_TYPE_ID AND JT.DELETED = 0
		LEFT JOIN T_JOB_GRADE JG ON JG.ID = J.JOB_GRADE_ID AND JG.DELETED = 0
		LEFT JOIN T_SALARY_TYPE ST ON ST.ID = J.SALARY_TYPE_ID AND ST.DELETED = 0
		LEFT JOIN T_SALARY_INFO SI ON SI.SALARY_TYPE_ID = J.SALARY_TYPE_ID AND SI.JOB_GRADE_ID = J.JOB_GRADE_ID  AND SI.DELETED = 0
		<include refid="where_findList"/>
		ORDER BY JG.ID DESC
	</sql>
	<!-- 查询职位列表总数 -->
	<select id="findListCount" resultType="java.lang.Integer">
		SELECT
		COUNT(DISTINCT J.ID)
		FROM
		T_JOB J
		LEFT JOIN T_JOB_TYPE JT ON JT.ID = J.JOB_TYPE_ID AND JT.DELETED = 0
		LEFT JOIN T_JOB_GRADE JG ON JG.ID = J.JOB_GRADE_ID AND JG.DELETED = 0
		LEFT JOIN T_SALARY_TYPE ST ON ST.ID = J.SALARY_TYPE_ID AND ST.DELETED = 0
		LEFT JOIN T_SALARY_INFO SI ON SI.SALARY_TYPE_ID = J.JOB_TYPE_ID AND SI.JOB_GRADE_ID = J.JOB_GRADE_ID  AND SI.DELETED = 0
		<include refid="where_findList"/>
	</select>
	<!-- 查询职位列表 -->
	<select id="findList" resultType="JobVo">
		SELECT
		TT.ID,TT.NAME,TT.JOB_TYPE,TT.JOB_GRADE,TT.SALARY_TYPE,
		TT.SALARY1,TT.SALARY2,TT.SALARY3,TT.SALARY4,TT.SALARY5,TT.SALARY6,TT.SALARY7,TT.SALARY8,TT.SALARY9,TT.SALARY10,
		TT.MERIT_PAY1,TT.MERIT_PAY2,TT.MERIT_PAY3,TT.MERIT_PAY4,TT.MERIT_PAY5,
		TT.JOB_TYPE_ID,TT.JOB_GRADE_ID,TT.SALARY_TYPE_ID
		FROM(
		SELECT R.*, ROWNUM RN
		FROM (
		<include refid="list_findList"/>
		) R
		where ROWNUM <![CDATA[<]]> (#{para.startIndex} + #{para.pageSize})
		) TT WHERE TT.RN >= #{para.startIndex}
	</select>
	<!-- 根据职位名称查询职位是否已经存在 -->
	<select id="findByName" resultType="Job">
		select
		ID,NAME
		from T_JOB
		where NAME = #{name}
	</select>
	<!-- 根据ID获取职位信息 -->
	<select id="findOne" resultType="JobVo">
		SELECT
			J.ID,J.NAME,JT.NAME JOB_TYPE,JG.NAME JOB_GRADE,ST.NAME SALARY_TYPE,
			SI.SALARY1,SI.SALARY2,SI.SALARY3,SI.SALARY4,SI.SALARY5,SI.SALARY6,SI.SALARY7,SI.SALARY8,SI.SALARY9,SI.SALARY10,
		    SI.MERIT_PAY1,SI.MERIT_PAY2,SI.MERIT_PAY3,SI.MERIT_PAY4,MERIT_PAY5,
		    J.JOB_TYPE_ID,J.JOB_GRADE_ID,J.SALARY_TYPE_ID
		FROM
			T_JOB J
		LEFT JOIN T_JOB_TYPE JT ON JT.ID = J.JOB_TYPE_ID AND JT.DELETED = 0
		LEFT JOIN T_JOB_GRADE JG ON JG.ID = J.JOB_GRADE_ID AND JG.DELETED = 0
		LEFT JOIN T_SALARY_TYPE ST ON ST.ID = J.SALARY_TYPE_ID AND ST.DELETED = 0
		LEFT JOIN T_SALARY_INFO SI ON SI.SALARY_TYPE_ID = J.JOB_TYPE_ID AND SI.JOB_GRADE_ID = J.JOB_GRADE_ID  AND SI.DELETED = 0
		WHERE J.ID = #{id}
	</select>
	<!-- 逻辑删除职位信息 -->
	<update id="delete">
		UPDATE T_JOB
		SET DELETED=1
		WHERE ID=#{id}
	</update>
	<!-- 获取职位类型集合 -->
	<select id="findJobType" resultType="JobType">
		select
		ID,NAME
		from T_JOB_TYPE
		where DELETED = 0
	</select>
	<!-- 获取职位等级集合 -->
	<select id="findJobGrade" resultType="JobGrade">
		select
		ID,NAME
		from T_JOB_GRADE
		where DELETED = 0
	</select>
	<!-- 获取薪资类型集合 -->
	<select id="findSalaryType" resultType="SalaryType">
		select
		ID,NAME
		from T_SALARY_TYPE
		where DELETED = 0
	</select>
	<!-- 获取工作制集合 -->
	<select id="findWorkSystem" resultType="WorkSystem">
		select
		ID,NAME
		from T_WORK_SYSTEM
		where DELETED = 0
	</select>
	
	<select id="findSimpleJobByDeptId" resultType="SimpleJobVo">
		<!-- 早期的业务需求是通过编制表查询,现阶段改为职位类型查询 -->
		<!-- SELECT 
			JOB.ID,JOB.NAME
		FROM T_JOB_ORGANIZE TJO
		LEFT JOIN T_JOB JOB ON JOB.ID = TJO.JOB_ID AND JOB.STATE = 1 AND JOB.DELETED = 0
		WHERE TJO.DELETED = 0 AND TJO.DEPT_ID in 
		<foreach collection="deptIds" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
		GROUP BY JOB.ID,JOB.NAME -->
		
		<!-- 职位部门关联同步职位类型查询 -->
		SELECT 
			JOB.ID,JOB.NAME 
		FROM T_DEPT DEPT
		INNER JOIN T_JOB_TYPE_DEPT TJTD ON TJTD.DEPT_ID = DEPT.ID AND TJTD.DELETED = 0
		INNER JOIN T_JOB_TYPE TJT ON TJT.ID = TJTD.JOB_TYPE_ID AND TJT.DELETED = 0
		INNER JOIN T_JOB JOB ON JOB.JOB_TYPE_ID = TJT.ID AND JOB.STATE = 1 AND JOB.DELETED = 0
		WHERE DEPT.DELETED = 0 AND DEPT.STATE = 1 
		<if test="deptIdArr != null and deptIdArr !=''">
			AND DEPT.ID IN 
			<foreach collection="deptIdArr" item="deptId" open="(" close=")" separator=",">
				#{deptId}
			</foreach>
		</if>
		GROUP BY JOB.ID,JOB.NAME
	</select>
	
	<!-- 查询新建编制的职位下拉列表 -->
	<select id="findDropDownList" resultType="SimpleJobVo">
		SELECT 
			ID,NAME
		FROM T_JOB 
		WHERE STATE = 1 AND DELETED = 0
	</select>
</mapper>