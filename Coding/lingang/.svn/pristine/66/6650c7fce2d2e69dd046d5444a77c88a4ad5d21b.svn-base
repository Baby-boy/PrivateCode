package com.lingang.core.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.lingang.api.domain.basic.Page;
import com.lingang.api.domain.basic.ServiceResult;
import com.lingang.api.domain.basic.StateCodeConstant;
import com.lingang.api.domain.vo.SysFileVo;
import com.lingang.api.domain.vo.SysPartnerVo;
import com.lingang.api.service.SysPartnerService;
import com.lingang.core.persistence.reader.SysFileReaderMapper;
import com.lingang.core.persistence.reader.SysPartnerReaderMapper;
import com.lingang.core.persistence.reader.SysPartnerTypeReaderMapper;

@Service("sysPartnerService")
public class SysPartnerServiceImpl implements SysPartnerService {
	
	@Resource
	private SysPartnerReaderMapper sysPartnerReaderMapper;
	
	@Resource
	private SysFileReaderMapper sysFileReaderMapper;

	@Override
	public ServiceResult<Page<SysPartnerVo>> selectPartnerPageList(Integer pageIndex, Integer pageSize) {
		ServiceResult<Page<SysPartnerVo>> result=new ServiceResult<Page<SysPartnerVo>>();
		//查询条件
		Map<String, Object> map=new HashMap<String, Object>();
		int countRecord=sysPartnerReaderMapper.selectPartnerCount(map);
		Page<SysPartnerVo> page=new Page<>(pageIndex, countRecord, pageSize);
		if(countRecord>0){
			map.put("startIndex", page.getStartIndex());
			map.put("onePageCount", pageSize);
			List<SysPartnerVo> list=sysPartnerReaderMapper.selectPartnerPageList(map);
			page.setList(list);
		}
		//返回信息
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(page);
		return result;
	}

	@Override
	public ServiceResult<SysPartnerVo> selectPartnerVoByPartnerId(Integer partnerId) {
		ServiceResult<SysPartnerVo> result=new ServiceResult<SysPartnerVo>();
		SysPartnerVo partnerVo=sysPartnerReaderMapper.selectPartnerVoByPartnerId(partnerId);
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(partnerVo);
		return result;
	}

}
