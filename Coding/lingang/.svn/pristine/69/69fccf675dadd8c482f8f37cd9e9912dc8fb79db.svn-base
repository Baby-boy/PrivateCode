package com.lingang.platform.controller.home;

import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.lingang.api.domain.basic.JsonResult;
import com.lingang.api.domain.basic.Page;
import com.lingang.api.domain.basic.ServiceResult;
import com.lingang.api.domain.entity.SysPartner;
import com.lingang.api.domain.pfvo.SysPartnerPfVo;
import com.lingang.api.service.SysPartnerService;

/**
 *@Description: 合作信息
 *@Author: lgl(lgl1012dream@foxmail.com)
 *@date:2016年12月9日 上午1:06:41
 *@Version:1.0
 */
@Controller
@RequestMapping("/sysPartner")
public class SysTopPartnerController {
	@Resource
	private SysPartnerService sysPartnerService;
	
	@ResponseBody
	@RequestMapping(value = "/queryAllByPage.do",method = { RequestMethod.GET, RequestMethod.POST })
	public JsonResult queryAllByPage(@RequestBody HashMap<String, Object> map) throws Exception{
		JsonResult jsonResult=new JsonResult(); 
		System.out.println("/sysPartner/queryAllByPage.do");
		ServiceResult<Page<SysPartnerPfVo>> serviceResult = sysPartnerService.queryAllByPage(map);
		serviceResult.setStateCode("1000");
		jsonResult.setData(serviceResult);
		
		return jsonResult;
	}
	
	@RequestMapping(value = "/queryById.do",method = { RequestMethod.GET, RequestMethod.POST })
	public JsonResult queryById(Integer partner_id){
		JsonResult jsonResult = new JsonResult();
		return jsonResult;
	}
	
	@RequestMapping(value = "/insert.do",method = { RequestMethod.GET, RequestMethod.POST })
	public JsonResult insert(SysPartner partner){
		JsonResult jsonResult = new JsonResult();
		return jsonResult;
	}
	
	@RequestMapping(value = "/update.do",method = { RequestMethod.GET, RequestMethod.POST })
	public JsonResult update(SysPartner partner){
		JsonResult jsonResult = new JsonResult();
		return jsonResult;
	}
	
	@RequestMapping(value = "/del.do",method = { RequestMethod.GET, RequestMethod.POST })
	public JsonResult del(Integer partner_id){
		JsonResult jsonResult = new JsonResult();
		return jsonResult;
	}
	
}
