package com.lingang.core.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.lingang.api.domain.basic.Page;
import com.lingang.api.domain.basic.ServiceResult;
import com.lingang.api.domain.basic.StateCodeConstant;
import com.lingang.api.domain.para.SysStationPara;
import com.lingang.api.domain.pfvo.SysStationPfVo;
import com.lingang.api.domain.vo.SysStationVo;
import com.lingang.api.service.SysStationService;
import com.lingang.core.persistence.reader.SysStationReaderMapper;

@Service("sysStationService")
public class SysStationServiceImpl implements SysStationService {
	@Resource
	private SysStationReaderMapper sysStationReaderMapper;

	/**
	 * 入驻列表
	 */
	@Override
	public ServiceResult<Page<SysStationVo>> selectSysStationAll(Integer regionId, Integer regionTypeId,
			List<Integer> industryIds, List<Integer> label_ids, Integer pageIndex, Integer pageSize) {
		ServiceResult<Page<SysStationVo>> result = new ServiceResult<Page<SysStationVo>>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("regionId", regionId);
		map.put("regionTypeId", regionTypeId);
		map.put("industryIds", industryIds);
		map.put("label_ids", label_ids);
		int countRecord = sysStationReaderMapper.selectSysStationCount(map);
		Page<SysStationVo> page = new Page<SysStationVo>(pageIndex, countRecord, pageSize);
		if (countRecord > 0) {
			map.put("startIndex", page.getStartIndex());
			map.put("onePageCount", pageSize);
			List<SysStationVo> list = sysStationReaderMapper.selectSysStationPageList(map);
			page.setList(list);
		}
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(page);
		return result;
	}

	/**
	 * 入驻详情
	 */
	@Override
	public ServiceResult<SysStationVo> selectByPrimaryKey(Integer stationId) {
		ServiceResult<SysStationVo> result = new ServiceResult<SysStationVo>();
		SysStationVo sysStationVo = sysStationReaderMapper.selectByPrimaryKey(stationId);
		result.setData(sysStationVo);
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		return result;
	}

	@Override
	public ServiceResult<Page<SysStationPfVo>> selectSysStationPfVoPageList(SysStationPara para) {
		ServiceResult<Page<SysStationPfVo>> result = new ServiceResult<>();
		// 查询条件
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("stationTitleKeywords", para.getStationTitleKeywords());
		map.put("regionNameKeywords", para.getRegionNameKeywords());
		int countRecord = sysStationReaderMapper.selectSysStationPfVoCount(map);
		Page<SysStationPfVo> page = new Page<>(para.getCurrentPage(), countRecord, para.getOnePageCount());
		if (countRecord > 0) {
			// 分页条件
			map.put("startIndex", page.getStartIndex());
			map.put("onePageCount", page.getOnePageCount());
			List<SysStationPfVo> list = sysStationReaderMapper.selectSysStationPfVoPageList(map);
			page.setList(list);
		}
		result.setData(page);
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		return result;
	}

}
