package com.lingang.core.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.lingang.api.domain.basic.Page;
import com.lingang.api.domain.basic.ServiceResult;
import com.lingang.api.domain.basic.StateCodeConstant;
import com.lingang.api.domain.vo.SysPublicVo;
import com.lingang.api.service.SysPublicService;
import com.lingang.core.persistence.reader.SysPublicReaderMapper;

@Service("sysPublicService")
public class SysPublicServiceImpl implements SysPublicService {

	@Resource
	private SysPublicReaderMapper sysPublicReaderMapper;

	@Override
	public ServiceResult<Page<SysPublicVo>> selectSysPublicVoPageListByRegionIdAndBasicsId(Integer regionId,Integer regionTypeId,
			Integer basicsId, Integer pageIndex, Integer pageSize) {
		ServiceResult<Page<SysPublicVo>> result = new ServiceResult<Page<SysPublicVo>>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("regionTypeId", regionTypeId);
		map.put("regionId", regionId);
		map.put("basicsId", basicsId);
		int countRecord = sysPublicReaderMapper.selectSysPublicVoCountByRegionIdAndBasicsId(map);
		Page<SysPublicVo> page = new Page<SysPublicVo>(pageIndex, countRecord, pageSize);
		if (countRecord > 0) {
			map.put("startIndex", page.getStartIndex());
			map.put("onePageCount", pageSize);
			List<SysPublicVo> list = sysPublicReaderMapper.selectSysPublicVoPageListByRegionIdAndBasicsId(map);
			page.setList(list);
		}
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(page);
		return result;
	}

	@Override
	public ServiceResult<SysPublicVo> selectSysPublicDetailsByPublicId(Integer publicId) {
		ServiceResult<SysPublicVo> result = new ServiceResult<SysPublicVo>();
		int countRecord = sysPublicReaderMapper.selectSysPublicDetailsCountByPublicId(publicId);
		if (countRecord == 1) {
			SysPublicVo sysPublicVo = sysPublicReaderMapper.selectSysPublicDetailsByPublicId(publicId);
			result.setData(sysPublicVo);
		}
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		return result;
	}

}
