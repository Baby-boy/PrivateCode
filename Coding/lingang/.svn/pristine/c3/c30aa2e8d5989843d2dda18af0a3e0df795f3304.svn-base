package com.lingang.core.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.lingang.api.domain.basic.Page;
import com.lingang.api.domain.basic.ServiceResult;
import com.lingang.api.domain.basic.StateCodeConstant;
import com.lingang.api.domain.entity.SysIndustry;
import com.lingang.api.domain.para.SysIndustryPara;
import com.lingang.api.domain.pfvo.SysIndustryPfVo;
import com.lingang.api.domain.vo.SysIndustryStatisticsVo;
import com.lingang.api.domain.vo.SysIndustryVo;
import com.lingang.api.service.SysIndustryService;
import com.lingang.core.persistence.reader.SysIndustryReaderMapper;
import com.lingang.core.persistence.writer.SysIndustryWriterMapper;

@Service("sysIndustryService")
public class SysIndustryServiceImpl implements SysIndustryService {

	@Resource
	private SysIndustryReaderMapper sysIndustryReaderMapper;

	@Resource
	private SysIndustryWriterMapper sysIndustryWriterMapper;

	/**
	 * 产业集群列表
	 */
	@Override
	public ServiceResult<Page<SysIndustryVo>> selectSysIndustryList(Integer pageIndex, Integer pageSize) {
		ServiceResult<Page<SysIndustryVo>> result = new ServiceResult<Page<SysIndustryVo>>();
		Map<String, Object> map = new HashMap<String, Object>();
		int countRecord = sysIndustryReaderMapper.selectSysIndustryCount();
		Page<SysIndustryVo> page = new Page<SysIndustryVo>(pageIndex, countRecord, pageSize);
		if (countRecord > 0) {
			map.put("startIndex", page.getCurrentPage() - 1);
			map.put("onePageCount", pageSize);
			List<SysIndustryVo> list = sysIndustryReaderMapper.selectSysIndustryVoPageList(map);
			page.setList(list);
		}
		;
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(page);
		return result;
	}

	/**
	 * 产业集群详情
	 */
	@Override
	public ServiceResult<SysIndustryVo> selectByPrimaryKey(Integer industryId) {
		ServiceResult<SysIndustryVo> result = new ServiceResult<SysIndustryVo>();
		SysIndustryVo industryvo = sysIndustryReaderMapper.selectSysIndustryVoById(industryId);
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(industryvo);
		return result;
	}

	@Override
	public ServiceResult<Page<SysIndustry>> selectIndustryList(Integer pageIndex, Integer pageSize) {
		ServiceResult<Page<SysIndustry>> result = new ServiceResult<Page<SysIndustry>>();
		// 查询条件
		Map<String, Object> map = new HashMap<String, Object>();
		int countRecord = sysIndustryReaderMapper.selectCount(map);
		Page<SysIndustry> page = new Page<SysIndustry>(pageIndex, countRecord, pageSize);
		if (countRecord > 0) {
			map.put("startIndex", page.getCurrentPage() - 1);
			map.put("onePageCount", pageSize);
			List<SysIndustry> list = sysIndustryReaderMapper.selectIndustryList(map);
			page.setList(list);
		}
		// 返回信息
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		result.setData(page);
		return result;
	}

	@Override
	public ServiceResult<Page<SysIndustryPfVo>> selectIndustryPfVoPageList(SysIndustryPara para) {
		ServiceResult<Page<SysIndustryPfVo>> result = new ServiceResult<>();
		// 查询条件
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("industryTitleKeywords", para.getIndustryTitleKeywords());
		int countRecord = sysIndustryReaderMapper.selectIndustryPfVoCount(map);
		Page<SysIndustryPfVo> page = new Page<>(para.getCurrentPage(), countRecord, para.getOnePageCount());
		if (countRecord > 0) {
			// 分页条件
			map.put("startIndex", page.getCurrentPage() - 1);
			map.put("onePageCount", page.getOnePageCount());
			List<SysIndustryPfVo> list = sysIndustryReaderMapper.selectIndustryPfVoPageList(map);
			page.setList(list);
		}
		result.setData(page);
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);

		return result;
	}

	@Override
	public ServiceResult<Page<SysIndustryStatisticsVo>> selectIndustryStatisticsList(Integer pageIndex,
			Integer pageSize) {
		ServiceResult<Page<SysIndustryStatisticsVo>> result = new ServiceResult<Page<SysIndustryStatisticsVo>>();
		Map<String, Object> map = new HashMap<String, Object>();
		Map<String, Object> numMap = new HashMap<String, Object>();
		int maxNum = 0;
		int countRecord = sysIndustryReaderMapper.selectIndustryStatisticsCount(map);
		Page<SysIndustryStatisticsVo> page = new Page<SysIndustryStatisticsVo>(pageIndex, countRecord, pageSize);
		if (countRecord > 0) {
			// 分页条件
			map.put("startIndex", page.getCurrentPage() - 1);
			map.put("onePageCount", page.getOnePageCount());
			List<SysIndustryStatisticsVo> list = sysIndustryReaderMapper.selectIndustryStatisticsPageList(map);
			page.setList(list);
			// 最大数查询
			maxNum = sysIndustryReaderMapper.selectIndustryStatisticsCountMax(map);
		}
		numMap.put("maxNum", maxNum);
		result.setDataMap(numMap);
		result.setData(page);
		result.setStateCode(StateCodeConstant.SUCCESS_CODE);
		return result;
	}

	@Override
	public ServiceResult<Object> updateIndustryDetails(SysIndustry industry) {
		ServiceResult<Object> result = new ServiceResult<>();
		int info = sysIndustryWriterMapper.updateByPrimaryKeySelective(industry);
		if (info == 1) {
			result.setStateCode(StateCodeConstant.SUCCESS_CODE);
			result.setMessage("更新成功!");
		} else {
			result.setStateCode(StateCodeConstant.ERROR_CODE);
			result.setMessage("更新失败!");
		}
		return result;
	}

	@Override
	public ServiceResult<Object> addIndustryDetails(SysIndustry industry) {
		ServiceResult<Object> result = new ServiceResult<>();
		int info = sysIndustryWriterMapper.insertSelective(industry);
		if (info == 1) {
			result.setStateCode(StateCodeConstant.SUCCESS_CODE);
			result.setMessage("更新成功!");
		} else {
			result.setStateCode(StateCodeConstant.ERROR_CODE);
			result.setMessage("更新失败!");
		}
		return result;
	}

}
