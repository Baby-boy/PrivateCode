<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/batch 
http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<bean:import resource="application.xml" />
	<context:component-scan base-package="com.aitou.mes" />

	<job id="messageJob" restartable="true">
		<step id="messageStep">
			<tasklet>
				<chunk reader="itemReader" processor="messagesItemProcessor"
					writer="itemWriter" commit-interval="2" chunk-completion-policy=""
					retry-limit="2">
					<retryable-exception-classes>
						<include class="java.lang.RuntimeException" />
					</retryable-exception-classes>
				</chunk>
			</tasklet>
		</step>
	</job>

	<bean:bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<bean:property name="transactionManager" ref="transactionManager" />
	</bean:bean>

	<bean:bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean:bean id="messageReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<bean:property name="lineMapper" ref="lineMapper">
		</bean:property>
		<bean:property name="resource" value="classpath:/users.txt"></bean:property>
	</bean:bean>
	<!-- 切换reader -->
	<bean:bean id="jdbcItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql" value="select ID, NAME,AGE from user" />
		<bean:property name="rowMapper">
			<bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<bean:property name="mappedClass" value="com.aitou.mes.User" />
			</bean:bean>
		</bean:property>
		<!-- <bean:property name="preparedStatementSetter" ref="paramStatementSetter" 
			/> -->
	</bean:bean>










	<!-- Mybatis ItemReader 其中queryId：对应Mapper xml文件中的id，此处为空，因要在代码中动态填充 -->
	<bean:bean id="itemReader"
		class="org.mybatis.spring.batch.MyBatisPagingItemReader" scope="prototype">
		<bean:property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<!-- 定义多少个后进行处理 -->
		<bean:property name="pageSize" value="1000" />
		<!-- <bean:property name="parameterValues" > <bean:map> <bean:entry key="id" 
			value="1" /> </bean:map> </bean:property> -->
		<bean:property name="queryId" value="findUsers" />
	</bean:bean>


	<!-- MybatisItemWriter 其中statementId：对应Mapperxml文件中的id，此处为空，因要在代码中动态填充 -->
	<bean:bean id="itemWriter"
		class="org.mybatis.spring.batch.MyBatisBatchItemWriter" scope="prototype">
		<bean:property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<bean:property name="statementId" value="insertman" />
	</bean:bean>














	<bean:bean id="jdbcItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql"
			value="insert into man (ID,NAME,AGE)
                    values
                   (:id,:name,:age)" />
		<bean:property name="itemSqlParameterSourceProvider">
			<bean:bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</bean:property>
	</bean:bean>


	<!-- sqlSessionFactory -->
	<bean:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<bean:property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property> 
			<property name="typeAliasesPackage" value="cn.itcast.usermanage.pojo"></property> 
			<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property -->
	</bean:bean>



	<bean:bean id="lineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<bean:property name="lineTokenizer">
			<bean:bean
				class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer"></bean:bean>
		</bean:property>
		<bean:property name="fieldSetMapper">
			<bean:bean class="com.aitou.mes.UserMapper"></bean:bean>
		</bean:property>
	</bean:bean>
	<bean:bean id="messagesItemProcessor" class="com.aitou.mes.MessagesItemProcessor"></bean:bean>

	<bean:bean id="messageWriter" class="com.aitou.mes.MessagesItemWriter"></bean:bean>


	<!-- ********* -->
	<!-- <bean:bean id="jdbcItemReader" 2 class="org.springframework.batch.item.database.JdbcCursorItemReader" 
		3 scope="step"> 4 <bean:property name="dataSource" ref="dataSource" /> 5 
		<bean:property name="sql" 6 value="select ID,NAME,CREDIT from customer" /> 
		7 <bean:property name="rowMapper"> 8 <bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper"> 
		9 <bean:property name="mappedClass" 10 value="com.aitou.db.CustomerCreditRowMapper" 
		/> 11 </bean:bean> 12 </bean:property> 13 <bean:property name="preparedStatementSetter" 
		ref="paramStatementSetter" /> 14 </bean:bean> 15 16 <bean:bean id="paramStatementSetter" 
		17 class="org.springframework.batch.core.resource.ListPreparedStatementSetter" 
		18 scope="step"> 19 <bean:property name="parameters"> 20 <bean:list> 21 <bean:value>#{jobParameters['id']}</bean:value> 
		22 </bean:list> 23 </bean:property> 24 </bean:bean> -->




</bean:beans>